name: ci

on:
  push:
    branches:
      - 'master'
      - 'develop'
    tags-ignore:
      - '**'

  pull_request: ~
  workflow_dispatch: ~

  pull_request_target:
    types: [labeled]


jobs:
  qa:
    name: qa
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install black flake8 isort
    - name: Check isort
      run: isort --check .

    - name: Check black
      run: black --check .

    - name: Check flake8
      run: flake8 .

  setup:
    name: setup
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      inputs: ${{ steps.prepare-inputs.outputs.inputs }}
      inputs-for-ubuntu: ${{ steps.prepare-inputs.outputs.inputs-for-ubuntu }}
    steps:
    - name: Set Matrix
      id: set-matrix
      shell: bash -eux {0}
      run: |
        MATRIX=$(cat << 'EOS'
        name:
        - gnu-10@ubuntu-20.04
        - clang-12@ubuntu-20.04
        - gnu-11@ubuntu-22.04
        - clang-14@ubuntu-22.04
        - clang-14@macos-12
        include:
        - name: gnu-10@ubuntu-20.04
          os: ubuntu-20.04
          compiler: gnu-10
          compiler_cc: gcc-10
          compiler_cxx: g++-10
          compiler_fc: gfortran-10
        - name: clang-12@ubuntu-20.04
          os: ubuntu-20.04
          compiler: clang-12
          compiler_cc: clang-12
          compiler_cxx: clang++-12
          compiler_fc: gfortran-10
        - name: gnu-11@ubuntu-22.04
          os: ubuntu-22.04
          compiler: gnu-11
          compiler_cc: gcc-11
          compiler_cxx: g++-11
          compiler_fc: gfortran-11
        - name: clang-14@ubuntu-22.04
          os: ubuntu-22.04
          compiler: clang-14
          compiler_cc: clang-14
          compiler_cxx: clang++-14
          compiler_fc: gfortran-11
        # Xcode compiler requires empty environment variables, so we pass null (~) here
        - name: clang-14@macos-12
          os: macos-12
          compiler: clang-14
          compiler_cc: ~
          compiler_cxx: ~
          compiler_fc: gfortran-11
        EOS
        )
        SKIP_MATRIX_JOBS=$(cat << 'EOS'
        ${{ inputs.skip_matrix_jobs }}
        EOS
        )
        SELECT_NAME_COND="1 != 1"
        SELECT_INCLUDE_COND="1 != 1"
        for skip_job in $SKIP_MATRIX_JOBS; do SELECT_NAME_COND="$SELECT_NAME_COND or . == \"$skip_job\""; SELECT_INCLUDE_COND="$SELECT_INCLUDE_COND or .name == \"$skip_job\""; done
        echo matrix=$(echo "$MATRIX" | yq eval "del(.name[] | select($SELECT_NAME_COND)) | del(.include[] | select($SELECT_INCLUDE_COND))" --output-format json --indent 0 -) >> $GITHUB_OUTPUT
    
    - name: Install GDAL and AEC Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgdal-dev libaec-dev
    
    - name: Prepare build-package Inputs
      id: prepare-inputs
      shell: bash -eux {0}
      run: |
        echo inputs=$(echo "${{ inputs.build_package_inputs || '{}' }}" | yq eval '.' --output-format json --indent 0 -) >> $GITHUB_OUTPUT
        echo inputs-for-ubuntu=$(echo "${{ inputs.build_package_inputs || '{}' }}" | yq eval '. * {"os":"ubuntu-20.04","compiler":"gnu-10","compiler_cc":"gcc-10","compiler_cxx":"g++-10","compiler_fc":"gfortran-10"}' --output-format json --indent 0 -) >> $GITHUB_OUTPUT
